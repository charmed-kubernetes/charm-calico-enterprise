# This file defines charm config options, and populates the Configure tab on Charmhub.
# If your charm does not require configuration options, delete this file entirely.
#
# See https://juju.is/docs/config for guidance.

options:
  pod_cidr:
    default: "192.168.0.0/16"
    type: string
    description: |
      Pod to Pod network CIDR used by each pod
  pod_cidr_block_size:
    default: "26"
    type: string
    description: |
      The CIDR size to split between nodes
  license:
    default: ""
    type: string
    description: |
      LicenseKey should be a file, appiled as a bas64 string

      file format:
          kind: LicenseKey
          apiVersion: crd.projectcalico.org/v1
          spec:
            certificate: <content>
            token: <content>

      $ juju config calico-enterprise license="$(cat license | base64 -w0)"
  addons:
    default: False
    type: boolean
    description: |
      Installs addons from Tigera.
  addons_storage_class:
    default: ""
    type: string
    description: |
      Storage class name to be used in the addons deployment.
  stable_ip_cidr:
    default: ""
    type: string
    description: |
      Stable IP network used by all the nodes involved in the cluster
  image_registry:
    default: "quay.io"
    type: string
    description: |
      Image registry for the tigera image. Defaults to quay.io
  image_path:
    default: ""
    type: string
    description: |
      Specifies the image in the format:
      <imagePath>/<imagePrefix><imageName>:<image-tag>
      If left empty, it is not defined
  image_prefix:
    default: ""
    type: string
    description: |
      Specifies the image in the format:
      <imagePath>/<imagePrefix><imageName>:<image-tag>
      If left empty, it is not defined
  image_registry_secret:
    default: ""
    type: string
    description: |
      String in the format of "user:password" run through base64 encoding
  tigera_version:
    default: 'distro'
    type: string
    description: |
      Calico Enterprise version to be used in the deployment. If "distro" is
      selected, then the matching version for the k8s version is used.
      If k8s is upgraded and there is a version mismatch, then the charm will
      block with status "Tigera: upgrade needed"
  auto_upgrade:
    default: False
    type: boolean
    description: |
      If tigera_version is set to "distro" and the cluster has been upgraded, then
      tigera is also upgraded if "auto_upgrade" is set to True.
      DO NOT USE THIS OPTION AS True IN PRODUCTION
  disable_early_network:
    default: True
    type: boolean
    description: |
      Allow to choose if the early BGP setup happens prior to the kubernetes deployment
      or not.
      Moving to False is still under TESTING
  mtu:
    default: 1500
    type: int
    description: |
      MTU to be used by the containers interface. If encapsulation is set to VXLAN,
      MTU=configured value - 50; IPIP, MTU=configured value - 20
  nic_autodetection_skip_interface:
    default: False
    type: boolean
    description: |
      Negates the logic of nic_autodetection_regex. E.g. skipInterface
  nic_autodetection_regex:
    default: ""
    type: string
    description: |
      A pattern to configure as the Calico NIC detection method. For example enp.*.
      Takes precedence over CIDR.
      For details on Autodetection see: https://docs.tigera.io/calico-enterprise/latest/networking/ipam/ip-autodetection#autodetection-methods
  nic_autodetection_cidrs:
    default: ""
    type: string
    description: |
      Comma separated list of CIDRs to use for autodetection. Overridden by nic_autodetection_regex. 
      For details on Autodetection see: https://docs.tigera.io/calico-enterprise/latest/networking/ipam/ip-autodetection#autodetection-methods
  bgp_parameters:
    default: ''
    type: string
    description: |
      If set, BGP will be configured in the early stage (pre-k8s) and passed on to k8s. 
      If the configuration is unset or has a string len=0, then bgp_parameters is considered
      empty. This option can be configured as follows:
        $ juju config tigera bgp_parameters="$(cat bgp_params.yaml)"

      For example:
      - hostname: <hostname>
        asn: <number>
        stableAddress: <IP>
        rack: <rack-name>
        interfaces:
        - IP: IP1
          peerIP: <1>
          peerASN: <1>
        - IP: IP2
          peerIP: <2>
          peerASN: <2>
        - ...

