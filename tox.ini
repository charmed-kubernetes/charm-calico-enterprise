[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = format, lint, unit, integration

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
;lib_path = {toxinidir}/lib
all_path = {[vars]src_path} {[vars]tst_path} 

[testenv]
setenv =
  JUJU_MODEL = {env:JUJU_MODEL:calico-enterprise}
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=pdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS
  CHARM_TIGERA_EE_LICENSE
  CHARM_TIGERA_EE_REG_SECRET

[testenv:format]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    black -l 99 {[vars]all_path}
    ruff check --fix {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    codespell
    ruff
commands =
    codespell {[vars]all_path}
    black -l 99 --check --diff {[vars]all_path}
    ruff check {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
                 -m pytest \
                 --ignore={[vars]tst_path}integration \
                 --tb native \
                 -vvv \
                 -s \
                 {posargs}
    coverage report

[testenv:integration]
description = Run integration tests
deps =
    aiohttp
    urllib3
    pytest-operator
    lightkube
    tenacity
commands =
    pytest -vvv \
           -s \
           --tb native \
           --log-cli-level=INFO \
           --asyncio-mode=auto \
           --model {env:JUJU_MODEL} \
           {posargs} \
           {[vars]tst_path}integration
